{"version":3,"sources":["components/TodoInsert.js","components/TodoListItem.js","components/TodoList.js","components/TodoTemplate.js","App.js","reportWebVitals.js","index.js"],"names":["TodoInsert","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","className","placeholder","type","TodoListItem","todo","onRemove","onToggle","style","id","text","checked","cn","onClick","React","memo","prevProps","nextProps","TodoList","todos","rowRenderer","index","key","width","height","rowCount","length","rowHeight","list","outline","TodoTemplate","children","App","setTodos","nextId","useRef","current","concat","filter","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c3696be.chunk.js","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport './TodoInsert.scss';\r\n\r\nconst TodoInsert = ({ onInsert }) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const onChange = useCallback((e) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      onInsert(value);\r\n      setValue(''); // value 값 초기화\r\n\r\n      // submit 이벤트는 브라우저에서 새로고침을 발생시킵니다.\r\n      // 이를 방지하기 위해 이 함수를 호출합니다.\r\n      e.preventDefault();\r\n    },\r\n    [onInsert, value],\r\n  );\r\n\r\n  return (\r\n    <form className=\"TodoInsert\" onSubmit={onSubmit}>\r\n      <input\r\n        placeholder=\"할 일을 입력하세요\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      <button type=\"submit\">\r\n        <MdAdd />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoInsert;\r\n","import React from 'react';\r\nimport {\r\n  MdCheckBoxOutlineBlank,\r\n  MdCheckBox,\r\n  MdRemoveCircleOutline,\r\n} from 'react-icons/md';\r\nimport cn from 'classnames';\r\nimport './TodoListItem.scss';\r\n\r\nconst TodoListItem = ({ todo, onRemove, onToggle, style }) => {\r\n  const { id, text, checked } = todo;\r\n\r\n  return (\r\n    <div className=\"TodoListItem-virtualized\" style={style}>\r\n      <div className=\"TodoListItem\">\r\n        <div\r\n          className={cn('checkbox', { checked })}\r\n          onClick={() => onToggle(id)}\r\n        >\r\n          {checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\r\n          <div className=\"text\">{text}</div>\r\n        </div>\r\n        <div className=\"remove\" onClick={() => onRemove(id)}>\r\n          <MdRemoveCircleOutline />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(\r\n  TodoListItem,\r\n  (prevProps, nextProps) => prevProps.todo === nextProps.todo,\r\n);\r\n","import React, { useCallback } from 'react';\r\nimport { List } from 'react-virtualized';\r\nimport TodoListItem from './TodoListItem';\r\nimport './TodoList.scss';\r\n\r\nconst TodoList = ({ todos, onRemove, onToggle }) => {\r\n  const rowRenderer = useCallback(\r\n    ({ index, key, style }) => {\r\n      const todo = todos[index];\r\n      return (\r\n        <TodoListItem\r\n          todo={todo}\r\n          key={key}\r\n          onRemove={onRemove}\r\n          onToggle={onToggle}\r\n          style={style}\r\n        />\r\n      );\r\n    },\r\n    [onRemove, onToggle, todos],\r\n  );\r\n\r\n  return (\r\n    <List\r\n      className=\"TodoList\"\r\n      width={512} // 전체 크기\r\n      height={513} // 전체 높이\r\n      rowCount={todos.length} // 항목 개수\r\n      rowHeight={57} // 항목 높이\r\n      rowRenderer={rowRenderer} // 항목을 렌더링할 때 쓰는 함수\r\n      list={todos} // 배열\r\n      style={{ outline: 'none' }} // List에 기본 적용되는 outline 스타일 제거\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoList);\r\n","import React from 'react';\r\nimport './TodoTemplate.scss';\r\n\r\nconst TodoTemplate = ({ children }) => {\r\n  return (\r\n    <div className=\"TodoTemplate\">\r\n      <div className=\"app-title\">일정관리</div>\r\n      <div className=\"content\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoTemplate;\r\n","import React, { useCallback, useRef, useState } from 'react';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/TodoTemplate';\n\n// function createBulkTodos() {\n//   const array = [];\n//   for (let i = 1; i <= 2500; i++) {\n//     array.push({\n//       id: i,\n//       text: `할 일 ${i}`,\n//       checked: false,\n//     });\n//   }\n//   return array;\n// }\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n\n  // 고유값으로 사용될 id\n  // ref를 사용하여 변수 담기\n  const nextId = useRef(1);\n\n  const onInsert = useCallback((text) => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false,\n    };\n    setTodos((todos) => todos.concat(todo));\n    nextId.current += 1; // nextId 1씩 더하기\n  }, []);\n\n  const onRemove = useCallback((id) => {\n    setTodos((todos) => todos.filter((todo) => todo.id !== id));\n  }, []);\n\n  const onToggle = useCallback((id) => {\n    setTodos((todos) =>\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, checked: !todo.checked } : todo,\n      ),\n    );\n  }, []);\n\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert} />\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n    </TodoTemplate>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}